/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/processing/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    withName: 'AUGUSTUS_CREATEGFFIDS|AUGUSTUS_GFF2PROTEINS' {
        publishDir = [
            path: { "${params.outdir}/annotations/augustus" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'HELPER_EVM2GFF|EVIDENCEMODELER_GFF2PROTEINS' {
       publishDir = [
            path: { "${params.outdir}/annotations/evm" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: MINIMAP_BAMTOGFF {
       publishDir = [
            path: { "${params.outdir}/transcripts" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: REPEAT_CAT_FASTA {
       publishDir = [
            path: { "${params.outdir}/repeatmasker" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'HELPER_SPALNTOGMOD' {
        publishDir = [
            path: { "${params.outdir}/gmod" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: PASA_ASMBLSTOTRAINING {
        publishDir = [
            path: { "${params.outdir}/annotations/pasa" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: 'SATSUMA2_SATSUMASYNTENY2|SATSUMA_KRAKEN2GFF' {
        publishDir = [
            path: { "${params.outdir}/synteny" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: STAR_ALIGN_PASS_TWO {
        publishDir = [
            path: { "${params.outdir}/rnaseq/bam" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: GAAS_ASSEMBLYFILTERBYSIZE {
        publishDir = [
            path: { "${params.outdir}/assembly" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: AUGUSTUS_ALIGNTOHINTS {
        publishDir = [
            path: { "${params.outdir}/augustus/hints/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: 'copy',
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: AUGUSTUS_AUGUSTUSBATCH {
       ext.args   = params.aug_options
    }
    withName: CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/pipeline_info" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }

}
